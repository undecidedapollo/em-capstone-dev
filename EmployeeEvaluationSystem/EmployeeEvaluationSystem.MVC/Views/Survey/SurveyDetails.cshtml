
@using EmployeeEvaluationSystem.MVC.Helpers.Request

@model EmployeeEvaluationSystem.MVC.Models.Survey.SurveyDetailsViewModel


<script>
    (function () {
        SurveyDetailsPage = {};

        SurveyDetailsPage.SendEmail = function (id) {
            var xhttp = new XMLHttpRequest();
            xhttp.onreadystatechange = function () {
                if (this.readyState == 4 && this.status == 200) {

                    alert("Email sent successfully!");
                } else if (this.readyState == 4) {
                    alert("Unable to send email.");
                }
            };
            xhttp.open("GET", "/Survey/ResendEmail?id=" + id, true);
            xhttp.send();
        };

        SurveyDetailsPage.MarkFinished = function (id) {
            var xhttp = new XMLHttpRequest();
            xhttp.onreadystatechange = function () {
                if (this.readyState == 4 && this.status == 200) {

                    alert("Marked finished successfully");
                    location.reload();
                } else if (this.readyState == 4) {
                    alert("Unable to mark finished");
                }
            };
            xhttp.open("GET", "/Survey/MarkFinished?id=" + id, true);
            xhttp.send();
        };


    })();



</script>

<h2>Survey Details</h2>

<div>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            <strong>Survey Id</strong>
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TheSurvey.Id)
        </dd>

        <dt>
            <strong>Survey Name</strong>
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TheSurvey.SurveyName)
        </dd>
        <dt>
            <strong>Survey Stage</strong>
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TheSurvey.SurveyType)
        </dd>

        <dt>
            <strong>Date Opened</strong>
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TheSurvey.DateOpened)
        </dd>

        <dt>
            <strong>Date Closed</strong>
        </dt>

        <dd>
            @Html.DisplayFor(model => model.TheSurvey.DateClosed)
        </dd>

        <dt>
            <strong>Delete Survey</strong>
        </dt>

        <dd>
            @Html.ActionLink("Delete Survey", "SurveyDelete", new { id = Model.TheSurvey.Id })
        </dd>

       

    </dl>
</div>

@if (!Model.TheSurvey.IsFinished)
{
    <button class="btn btn-xs btn-success" type="button" onclick="SurveyDetailsPage.MarkFinished('@(Model.TheSurvey.Id)')">Mark As Finished</button>
}

@if (Model.CanShowAllReport)
{
    @Html.ActionLink("View Report", "ReportPage", "ReportGeneration", new { survAvailId = Model.TheSurvey.Id }, new { @class = "btn btn-primary btn-sm" })
}


@foreach (var user in Model.UserGroups)
{
    <br />
    <br />
    <h2>@(user.Name)'s Survey Results</h2> if (user.CanShowReport) {@Html.ActionLink("View Report", "ReportPage", "ReportGeneration", new { userId = user.UserId, survAvailId = Model.TheSurvey.Id }, new { @class = "btn btn-primary btn-sm" })}
    <hr />
    <table class="table">
        <tr>
            <th>
                <strong>Pending Survey Id</strong>
            </th>
            <th>
                <strong>Name/Email</strong>
            </th>
            <th>
                <strong>Role</strong>
            </th>
            <th>
                <strong>Status</strong>
            </th>
            <th>
                <strong>Date Started</strong>
            </th>
            <th>
                <strong>Date Finished</strong>
            </th>
            <th>

            </th>
        </tr>

        @foreach (var item in user.UsersForSurvey)
        {

            string selectedRow = "";

            <tr class="@selectedRow">
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.NameOrEmail)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.RoleName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Status)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateStarted)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DateFinished)
                </td>
                <td>
                    @if (item.CanViewResults)
                    {
                        @Html.ActionLink("Show Results", "ViewSurveyAnswers", new { pendingSurveyId = item.Id })
                    }
                </td>
                <td>
                   @if (item.CanResendEmail)
                    {
                    <button class="btn btn-xs btn-success" type="button" onclick="SurveyDetailsPage.SendEmail('@(item.Id)')">Resend Email</button>
                    }
                </td>
            </tr>
        }

    </table>
}



