@model EmployeeEvaluationSystem.MVC.Models.Survey.SurveyPageViewModel

@{
    ViewBag.Title = "Survey";
}

<script type="text/javascript">
    (function () {
        SurveyHelper = {};

        SurveyHelper.UpdatePostID = function (id, val) {
            debugger;
            if(id == null){
                return;
            }

            id.value = val;
            //var element = document.getElementById(id);
            //element.value = val;
        };

        SurveyHelper.UpdateRadioButton = function (id, val) {
            debugger;
            if (id == null) {
                return;
            }

            var item = document.getElementById(id);

            if (item == null) {
                return;
            }

            item.checked = true;
        };

        SurveyHelper.GoBackOnePage = function(id){
            debugger;
            if(id == null){
                return;
            }

            id.value = true;
            document.getElementById("surveyform").submit();
        };



    })();
</script>


<h2>Category @Model.Category.Name</h2>
<p>@Model.Category.Description</p>
<hr />

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "surveyform" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <span style="color:red;">* - Required question</span>
        <div class="form-group">
            <label class="col-md-9">Question:</label>
            <div class="col-md-3"><b>Response:</b></div>
            @Html.HiddenFor(model => model.BackOnePage, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.HiddenFor(model => model.StatusGuid, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.HiddenFor(model => model.SurveyInstanceId, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.HiddenFor(model => model.PendingSurveyId, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.HiddenFor(model => model.Category.Id, htmlAttributes: new { @class = "control-label col-md-2" })
        </div>
        @for (var i = 0; i < Model.Questions.Count; i++)
        {
            <div class="form-group">
                <div class="col-md-9">@(Model.Questions[i].Question.DisplayText) @if (Model.Questions[i].Question.IsRequired) { <text><span style="color:red;">*</span></text>}</div>
                <div class="col-md-3">
                    @(Model.Questions[i].Question.Id)
                    @*@Html.HiddenFor(model => model.Questions[i].Question.Id)*@
                    <input data-val="true" data-val-number="The field Id must be a number." data-val-required="The Id field is required." id="@($"Questions_{i}__Question_Id")" name="@($"Questions[{i}].Question.Id")" type="hidden" value="@(Model.Questions[i].Question.Id)">



                    @if (Model.Questions[i].Question.QuestionType.IsRating)
                    {
                        @Html.HiddenFor(model => model.Questions[i].Answer.ResponseNum)


                        


                        @Html.Hidden($"Answer{i}", Model.Questions[i].Answer.ResponseNum)
                        <div>
                            @for (var j = Model.Questions[i].Question.QuestionType.RatingMin; j <= Model.Questions[i].Question.QuestionType.RatingMax; j++)
                            {
                                <label class="surveyLabel">
                                    <input class="surveyRadioInput" type="radio" name="@($"radioset{Model.Questions[i].Question.Id}")" id="@($"question-{Model.Questions[i].Question.Id}-{j}")" value="@j"
                                           onclick="SurveyHelper.UpdatePostID(@($"Questions_{i}__Answer_ResponseNum"), @j)" />
                                    @if (Model.Questions[i].Question.QuestionType.RatingMin == j || Model.Questions[i].Question.QuestionType.RatingMax == j)
                                    {
                                        @j
                                    }
                                    else {
                                        @:&nbsp;
                                    }
                                </label>

                                if (Model.Questions[i].Answer.ResponseNum != null && Model.Questions[i].Answer.ResponseNum == j)
                                {
                                    <script>SurveyHelper.UpdateRadioButton("@($"question-{Model.Questions[i].Question.Id}-{j}")", @(Model.Questions[i].Answer.ResponseNum));</script>
                                }
                            }
                        </div>
                    }
                    else
                    {
                        @("An unknown error has occured. Please refresh the page")
                    }
                </div>
            </div>
        }
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="button" value="Previous Page" onclick="SurveyHelper.GoBackOnePage(@($"BackOnePage"))" class="btn btn-default" />
                <input type="submit" value="Next Page" class="btn btn-default" />
            </div>
        </div>
    </div>
}
